name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install latest npm
        run: npm install npm@latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npx npm@latest ci

  build:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: gcr.io/kaniko-project/executor:debug
      options: --entrypoint=sh

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate Docker Registry
        run: |
          echo "{\"auths\":{\"${{ secrets.CI_REGISTRY }}\":{\"username\":\"${{ secrets.CI_REGISTRY_USER }}\",\"password\":\"${{ secrets.CI_REGISTRY_PASSWORD }}\"}}}" > /kaniko/.docker/config.json
        env:
          CI_REGISTRY: ${{ secrets.CI_REGISTRY }}
          CI_REGISTRY_USER: ${{ secrets.CI_REGISTRY_USER }}
          CI_REGISTRY_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG="api-${{ github.sha }}"
          LATEST_TAG="api-latest"

          if [[ -n "${{ github.ref_name }}" ]]; then
            LATEST_TAG="api-${{ github.ref_name }}"
          fi

          /kaniko/executor --context $GITHUB_WORKSPACE --dockerfile $GITHUB_WORKSPACE/Dockerfile \
            --destination ${{ secrets.CI_REGISTRY_IMAGE }}:$IMAGE_TAG \
            --destination ${{ secrets.CI_REGISTRY_IMAGE }}:$LATEST_TAG

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Install SSH Client
        run: sudo apt update && sudo apt install -y openssh-client

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 400 ~/.ssh/deploy_key
          ssh-keyscan -H swarm.june07.com >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/deploy_key

      - name: Deploy to Production
        run: ssh -i ~/.ssh/deploy_key github@swarm.june07.com \
          /home/github/june07/aname/backend/update-service.sh ${{ secrets.CI_REGISTRY_IMAGE }}:api-${{ github.sha }} aname-backend_node
