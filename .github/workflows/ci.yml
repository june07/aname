name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install latest npm
        run: npm install npm@latest

      - name: Install dependencies
        run: npm ci

  build-image:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate a config.json
        run: |
          cat <<JSON > config.json
          {
            "auths": {
              "docker.pkg.github.com": {
                "auth": "$(echo -n :${{ secrets.GITHUB_TOKEN }} | base64)"
              }
            }
          }
          JSON
      - name: Build and Push Docker Image
        run: |
          if [ -z "${{ github.ref_name }}" ]; then
            docker run \
            -v $(pwd):/workspace \
            -v $(pwd)/config.json:/kaniko/.docker/config.json:ro \
            gcr.io/kaniko-project/executor:latest \
            --context $GITHUB_WORKSPACE --dockerfile $GITHUB_WORKSPACE/Dockerfile \
            --destination ${{ secrets.CI_REGISTRY_IMAGE }}:api-${{ github.sha }} \
            --destination ${{ secrets.CI_REGISTRY_IMAGE }}:api-latest
          else
            docker run \
            -v $(pwd):/workspace \
            -v $(pwd)/config.json:/kaniko/.docker/config.json:ro \
            gcr.io/kaniko-project/executor:latest \
            --context $GITHUB_WORKSPACE --dockerfile $GITHUB_WORKSPACE/Dockerfile \
            --destination ${{ secrets.CI_REGISTRY_IMAGE }}:api-${{ github.sha }} \
            --destination ${{ secrets.CI_REGISTRY_IMAGE }}:api-${{ github.ref_name }}
          fi

  deploy:
    needs: build-image
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Install SSH Client
        run: sudo apt update && sudo apt install -y openssh-client

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 400 ~/.ssh/deploy_key
          ssh-keyscan -H swarm.june07.com >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/deploy_key

      - name: Deploy to Production
        run: ssh -i ~/.ssh/deploy_key github@swarm.june07.com \
          /home/github/june07/aname/backend/update-service.sh ${{ secrets.CI_REGISTRY_IMAGE }}:api-${{ github.sha }} aname-backend_node
